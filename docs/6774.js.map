{"version":3,"sources":["webpack://bashscript/./repl/monaco.ts"],"names":["monacoElement","document","getElementById","monaco","initLeft","initialValue","updateLeft","getModel","setValue","value","language","minimap","enabled","formatOnType","scrollBeyondLastLine","readOnly","theme","window","addEventListener","layout","monacoModel","onDidChangeContent","getValue"],"mappings":"uJAGA,MAAMA,EAAgBC,SAASC,eAAe,QAC9C,IAAIC,EAEG,MAAMC,EAAW,CACtBC,EACAC,KAEA,GAAIH,EAEF,OADIE,GAAcF,EAAOI,WAAYC,SAASH,GACvCF,EAGTA,EAAS,gBAAqBH,EAAe,CAC3CS,MAAOJ,GAAgB,GACvBK,SAAU,aACVC,QAAS,CAACC,SAAS,GACnBC,cAAc,EAGdC,sBAAsB,EACtBC,UAAU,EACVC,MAAO,YAGTC,OAAOC,iBAAiB,SAAU,KAChCf,EAAOgB,WAGT,MAAMC,EAAcjB,EAAOI,WAM3B,OAJAa,EAAYC,mBAAmB,KAC7Bf,EAAWc,EAAYE,cAGlBnB","file":"6774.js","sourcesContent":["// import * as Monaco from 'monaco-editor'\nimport * as Monaco from 'monaco-editor/esm/vs/editor/editor.api'\n\nconst monacoElement = document.getElementById('left')!\nlet monaco: Monaco.editor.IStandaloneCodeEditor\n\nexport const initLeft = (\n  initialValue: string | undefined,\n  updateLeft: (untranspiled: string) => void,\n) => {\n  if (monaco) {\n    if (initialValue) monaco.getModel()!.setValue(initialValue)\n    return monaco\n  }\n\n  monaco = Monaco.editor.create(monacoElement, {\n    value: initialValue || '',\n    language: 'typescript',\n    minimap: {enabled: false},\n    formatOnType: true,\n    // lineNumbers: \"off\",\n    // roundedSelection: false,\n    scrollBeyondLastLine: false,\n    readOnly: false,\n    theme: 'vs-dark',\n  })\n\n  window.addEventListener('resize', () => {\n    monaco.layout()\n  })\n\n  const monacoModel = monaco.getModel()!\n\n  monacoModel.onDidChangeContent(() => {\n    updateLeft(monacoModel.getValue())\n  })\n\n  return monaco\n}\n"],"sourceRoot":""}