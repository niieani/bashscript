{"version":3,"sources":["webpack://bashscript/./repl/monaco-right.ts"],"names":["monacoElement","document","getElementById","monaco","initRight","initialValue","getModel","setValue","value","language","minimap","enabled","formatOnType","scrollBeyondLastLine","readOnly","theme","window","addEventListener","layout"],"mappings":"uJAGA,MAAMA,EAAgBC,SAASC,eAAe,SAC9C,IAAIC,EAEG,MAAMC,EAAaC,GACpBF,GACEE,GAAcF,EAAOG,WAAYC,SAASF,GACvCF,IAGTA,EAAS,gBAAqBH,EAAe,CAC3CQ,MAAOH,GAAgB,GACvBI,SAAU,QACVC,QAAS,CAACC,SAAS,GACnBC,cAAc,EAGdC,sBAAsB,EACtBC,UAAU,EACVC,MAAO,YAGTC,OAAOC,iBAAiB,SAAU,KAChCd,EAAOe,WAGFf","file":"1233.js","sourcesContent":["// import * as Monaco from 'monaco-editor'\nimport * as Monaco from 'monaco-editor/esm/vs/editor/editor.api'\n\nconst monacoElement = document.getElementById('right')!\nlet monaco: Monaco.editor.IStandaloneCodeEditor\n\nexport const initRight = (initialValue: string | undefined) => {\n  if (monaco) {\n    if (initialValue) monaco.getModel()!.setValue(initialValue)\n    return monaco\n  }\n\n  monaco = Monaco.editor.create(monacoElement, {\n    value: initialValue || '',\n    language: 'shell',\n    minimap: {enabled: false},\n    formatOnType: true,\n    // lineNumbers: \"off\",\n    // roundedSelection: false,\n    scrollBeyondLastLine: false,\n    readOnly: true,\n    theme: 'vs-dark',\n  })\n\n  window.addEventListener('resize', () => {\n    monaco.layout()\n  })\n\n  return monaco\n}\n"],"sourceRoot":""}