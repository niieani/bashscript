{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/language/json/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/tokenization.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/jsonMode.js"],"names":["Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","monaco","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","diagnosticsOptions","enableSchemaRequest","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","then","client","_","withSyncedResources","create","line","character","is","value","candidate","Is","objectLiteral","number","one","two","three","four","start","end","Error","uri","range","defined","string","undefined","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","color","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","result","location","message","Warning","Information","Hint","severity","code","source","relatedInformation","title","command","args","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","options","overwrite","ignoreIfExists","boolean","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolInformation","TextEditChangeImpl","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","Object","_workspaceEdit","forEach","textEditChange","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","version","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","detail","selectionRange","children","deprecated","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","diagnostics","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","p","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","e","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","Uri","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","getModels","d","resource","worker","resetSchema","doValidation","markers","map","diag","toSeverity","startLineNumber","startColumn","endLineNumber","endColumn","getModel","err","console","error","lsSeverity","MarkerSeverity","Info","fromPosition","column","lineNumber","fromRange","toRange","toCompletionItemKind","mItemKind","languages","toTextEdit","CompletionAdapter","provideCompletionItems","context","token","doComplete","info","wordInfo","getWordUntilPosition","wordRange","entry","item","insertText","sortText","filterText","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","suggestions","toMarkdownString","thing","toMarkedStringArray","HoverAdapter","provideHover","doHover","toSymbolKind","mKind","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","tags","fromFormattingOptions","ParseOptions","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","provideColorPresentations","getColorPresentations","presentations","presentation","FoldingRangeAdapter","provideFoldingRanges","ranges","Comment","Imports","Region","toFoldingRangeKind","createScanner","ignoreTrivia","pos","len","tokenOffset","lineStartOffset","tokenLineStartOffset","prevTokenLineStartOffset","scanError","scanHexDigits","count","exact","digits","charCodeAt","scanNext","isWhiteSpace","fromCharCode","isLineBreak","ch_1","scanString","safeLength","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenStartLine","getTokenStartCharacter","getTokenError","DEFAULT","allowTrailingComma","createTokenizationSupport","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","comments","numberOfInsertedCharacters","adjustOffset","scanner","lastWasColon","tokens","endState","clone","type","substr","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_PROPERTY_NAME","TOKEN_VALUE_NUMBER","TOKEN_COMMENT_LINE","TOKEN_COMMENT_BLOCK","getStateData","startIndex","scopes","_state","equals","other","setStateData","setupMode","disposables","providers","uris","apply","registerProviders","modeConfiguration","disposeAll","documentFormattingEdits","registerDocumentFormattingEditProvider","documentRangeFormattingEdits","registerDocumentRangeFormattingEditProvider","completionItems","registerCompletionItemProvider","hovers","registerHoverProvider","documentSymbols","registerDocumentSymbolProvider","setTokensProvider","colors","registerColorProvider","foldingRanges","registerFoldingRangeProvider","setLanguageConfiguration","richEditConfiguration","newDefaults","asDisposable","pop","wordPattern","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn"],"mappings":"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","file":"4643.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId,\n                    enableSchemaRequest: this._defaults.diagnosticsOptions.enableSchemaRequest\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; });\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                monaco.editor.getModels().forEach(onModelRemoved);\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model && model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var wordInfo = model.getWordUntilPosition(position);\n            var wordRange = new Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText || entry.label,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    range: wordRange,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.additionalTextEdits) {\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                suggestions: items\n            };\n        });\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        });\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                detail: '',\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                range: toRange(item.location.range),\n                selectionRange: toRange(item.location.range),\n                tags: []\n            }); });\n        });\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        });\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        });\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        });\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        });\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        });\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: void 0\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: void 0 }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    var path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        var key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        var index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            var obj = Object.create(null);\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                var valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return void 0;\n    }\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    if (contains(node, offset, includeRightBound)) {\n        var children = node.children;\n        if (Array.isArray(children)) {\n            for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                var item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return void 0;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        lineStartOffset = lineNumber;\n        prevTokenLineStartOffset = tokenLineStartOffset;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            lineNumber++;\n            tokenLineStartOffset = pos;\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var safeLength = len - 1; // For lookahead.\n                    var commentClosed = false;\n                    while (pos < safeLength) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                        if (isLineBreak(ch)) {\n                            if (ch === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                                pos++;\n                            }\n                            lineNumber++;\n                            tokenLineStartOffset = pos;\n                        }\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n            case 47 /* slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenStartLine: function () { return lineStartOffset; },\n        getTokenStartCharacter: function () { return tokenOffset - prevTokenLineStartOffset; },\n        getTokenError: function () { return scanError; },\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore, always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the innermost node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\nexport function printParseErrorCode(code) {\n    switch (code) {\n        case 1 /* InvalidSymbol */: return 'InvalidSymbol';\n        case 2 /* InvalidNumberFormat */: return 'InvalidNumberFormat';\n        case 3 /* PropertyNameExpected */: return 'PropertyNameExpected';\n        case 4 /* ValueExpected */: return 'ValueExpected';\n        case 5 /* ColonExpected */: return 'ColonExpected';\n        case 6 /* CommaExpected */: return 'CommaExpected';\n        case 7 /* CloseBraceExpected */: return 'CloseBraceExpected';\n        case 8 /* CloseBracketExpected */: return 'CloseBracketExpected';\n        case 9 /* EndOfFileExpected */: return 'EndOfFileExpected';\n        case 10 /* InvalidCommentToken */: return 'InvalidCommentToken';\n        case 11 /* UnexpectedEndOfComment */: return 'UnexpectedEndOfComment';\n        case 12 /* UnexpectedEndOfString */: return 'UnexpectedEndOfString';\n        case 13 /* UnexpectedEndOfNumber */: return 'UnexpectedEndOfNumber';\n        case 14 /* InvalidUnicode */: return 'InvalidUnicode';\n        case 15 /* InvalidEscapeCharacter */: return 'InvalidEscapeCharacter';\n        case 16 /* InvalidCharacter */: return 'InvalidCharacter';\n    }\n    return '<unknown ParseErrorCode>';\n}\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`.\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`.\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var providers = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    function registerProviders() {\n        var languageId = defaults.languageId, modeConfiguration = defaults.modeConfiguration;\n        disposeAll(providers);\n        if (modeConfiguration.documentFormattingEdits) {\n            providers.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n        }\n        if (modeConfiguration.documentRangeFormattingEdits) {\n            providers.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n        }\n        if (modeConfiguration.completionItems) {\n            providers.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n        }\n        if (modeConfiguration.hovers) {\n            providers.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n        }\n        if (modeConfiguration.documentSymbols) {\n            providers.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n        }\n        if (modeConfiguration.tokens) {\n            providers.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n        }\n        if (modeConfiguration.colors) {\n            providers.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\n        }\n        if (modeConfiguration.foldingRanges) {\n            providers.push(monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker)));\n        }\n        if (modeConfiguration.diagnostics) {\n            providers.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\n        }\n    }\n    registerProviders();\n    disposables.push(monaco.languages.setLanguageConfiguration(defaults.languageId, richEditConfiguration));\n    var modeConfiguration = defaults.modeConfiguration;\n    defaults.onDidChange(function (newDefaults) {\n        if (newDefaults.modeConfiguration !== modeConfiguration) {\n            modeConfiguration = newDefaults.modeConfiguration;\n            registerProviders();\n        }\n    });\n    disposables.push(asDisposable(providers));\n    return asDisposable(disposables);\n}\nfunction asDisposable(disposables) {\n    return { dispose: function () { return disposeAll(disposables); } };\n}\nfunction disposeAll(disposables) {\n    while (disposables.length) {\n        disposables.pop().dispose();\n    }\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n"],"sourceRoot":""}