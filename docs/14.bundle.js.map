{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.js"],"names":["__webpack_require__","d","__webpack_exports__","language","conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","defaultToken","ignoreCase","tokenPostfix","token","keywords","symbols","escapes","tokenizer","root","string","cases","@eos","next","@default","$#==$S2"],"mappings":"iIAAAA,EAAAC,EAAAC,EAAA,6BAAAC,IAKA,IAAAC,GACAC,UACAC,YAAA,OAEAC,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETE,SACAC,SACAC,MAAA,IAAAC,OAAA,gCACAC,IAAA,IAAAD,OAAA,sCAIAZ,GACAc,aAAA,GACAC,YAAA,EACAC,aAAA,OACAZ,WACSa,MAAA,oBAAAX,KAAA,IAAqCC,MAAA,MACrCU,MAAA,wBAAAX,KAAA,IAAAC,MAAA,MACAU,MAAA,mBAAAX,KAAA,IAAAC,MAAA,MAETW,SAAA,4FAEAC,QAAA,0BACAC,QAAA,wEAEAC,WACAC,OACA,yCACA,2BAAyCL,MAAA,YAAsBA,MAAA,iBAE/D,kBAEA,0CACA,0CAEA,oBAEA,mBAEA,uBACA,6BAEA,aAAiB,cACjB,yBAEA,4CACA,+CACA,iBAEA,QAAgB,cAEhB,2BACA,2BAEAM,SACA,aACAC,OACAC,QAAiCR,MAAA,SAAAS,KAAA,WACjCC,WAAA,aAGA,6BACA,gCACA,wBACA,6BACA,QACAH,OACAI,WAAoCX,MAAA,SAAAS,KAAA,QACpCC,WAAA,aAGA","file":"14.bundle.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: 'REM'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#region\"),\n            end: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#endregion\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.bat',\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: /call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/,\n    // we include these common regular expressions\n    symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/^(\\s*)(rem(?:\\s.*|))$/, ['', 'comment']],\n            [/(\\@?)(@keywords)(?!\\w)/, [{ token: 'keyword' }, { token: 'keyword.$2' }]],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // blocks\n            [/setlocal(?!\\w)/, 'keyword.tag-setlocal'],\n            [/endlocal(?!\\w)/, 'keyword.tag-setlocal'],\n            // words\n            [/[a-zA-Z_]\\w*/, ''],\n            // labels\n            [/:\\w*/, 'metatag'],\n            // variables\n            [/%[^%]+%/, 'variable'],\n            [/%%[\\w]+(?!\\w)/, 'variable'],\n            // punctuations\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+/, 'number'],\n            // punctuation: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings:\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n        ],\n        string: [\n            [/[^\\\\\"'%]+/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/%[\\w ]+%/, 'variable'],\n            [/%%[\\w]+(?!\\w)/, 'variable'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/$/, 'string', '@popall']\n        ],\n    }\n};\n"],"sourceRoot":""}