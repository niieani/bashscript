{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/language/typescript/tokenization.js","webpack:///./node_modules/monaco-editor/esm/vs/language/typescript/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/typescript/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js"],"names":["Language","createTokenizationSupport","language","classifier","typescriptServices","bracketTypeTable","TypeScript","tsBracketTypeTable","jsBracketTypeTable","tokenTypeTable","tsTokenTypeTable","jsTokenTypeTable","getInitialState","State","None","tokenize","line","state","text","ret","tokens","endState","appendFn","startIndex","type","length","scopes","push","isTypeScript","deltaOffset","indexOf","checkSheBang","result","getClassificationsForLine","eolState","offset","finalLexState","inJsDocComment","InMultiLineCommentTrivia","test","_i","_a","entries","entry","classification","Punctuation","ch","charCodeAt","Comment","substr","this","prototype","clone","equals","other","Object","create","Identifier","Keyword","Operator","NumberLiteral","RegExpLiteral","StringLiteral","Promise","monaco","WorkerManager","modeId","defaults","_this","_modeId","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","dispose","_client","clearInterval","maxIdleTime","getWorkerMaxIdleTime","timePassedSinceLastUsed","Date","now","_getClient","editor","createWebWorker","moduleId","label","createData","compilerOptions","getCompilerOptions","extraLibs","getExtraLibs","p","getProxy","getEagerModelSync","then","worker","withSyncedResources","getModels","filter","model","getModeId","map","uri","getLanguageServiceWorker","completeCallback","errorCallback","r","resources","arguments","client","_","c","e","extendStatics","__extends","setPrototypeOf","__proto__","Array","d","b","hasOwnProperty","__","constructor","Uri","languageFeatures_Promise","Adapter","_positionToOffset","position","getModel","getOffsetAt","_offsetToPosition","getPositionAt","_textSpanToRange","span","p1","start","p2","startLineNumber","lineNumber","startColumn","column","endLineNumber","endColumn","languageFeatures_DiagnostcsAdapter","_super","DiagnostcsAdapter","_selector","call","_disposables","_listener","onModelAdd","handle","changeSubscription","onDidChangeContent","clearTimeout","setTimeout","_doValidate","toString","onModelRemoved","setModelMarkers","key","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","forEach","resource","promises","getDiagnosticsOptions","noSyntaxValidation","noSemanticValidation","getSyntacticDiagnostics","getSemanticDiagnostics","join","diagnostics","markers","reduce","concat","_convertDiagnostics","done","undefined","err","console","error","diag","_b","severity","MarkerSeverity","Error","message","messageText","languageFeatures_SuggestAdapter","SuggestAdapter","apply","defineProperty","get","enumerable","configurable","provideCompletionItems","token","getWordUntilPosition","wireCancellationToken","getCompletionsAtPosition","info","name","sortText","kind","convertKind","resolveCompletionItem","item","myItem","getCompletionEntryDetails","details","detail","displayParts","documentation","Kind","primitiveType","keyword","languages","CompletionItemKind","variable","localVariable","Variable","memberVariable","memberGetAccessor","memberSetAccessor","Field","function","memberFunction","constructSignature","callSignature","indexSignature","Function","enum","Enum","module","Module","class","Class","interface","Interface","warning","File","Property","languageFeatures_SignatureHelpAdapter","SignatureHelpAdapter","signatureHelpTriggerCharacters","provideSignatureHelp","getSignatureHelpItems","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","items","signature","parameters","prefixDisplayParts","i","a","parameter","separatorDisplayParts","suffixDisplayParts","languageFeatures_QuickInfoAdapter","QuickInfoAdapter","provideHover","getQuickInfoAtPosition","tags","tag","match","contents","range","textSpan","value","OccurrencesAdapter","provideDocumentHighlights","getOccurrencesAtPosition","isWriteAccess","DocumentHighlightKind","Write","Text","DefinitionAdapter","provideDefinition","getDefinitionAtPosition","entries_1","parse","fileName","ReferenceAdapter","provideReferences","context","getReferencesAtPosition","entries_2","OutlineAdapter","provideDocumentSymbols","getNavigationBarItems","convert","bucket","containerLabel","outlineTypeTable","SymbolKind","location","spans","containerName","childItems","child","unknown","script","localFunction","constructorImplementation","typeParameter","alias","const","let","Method","javaScriptWorker","typeScriptWorker","languageFeatures_FormatHelper","FormatHelper","_convertOptions","options","ConvertTabsToSpaces","insertSpaces","TabSize","tabSize","IndentSize","IndentStyle","Smart","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","_convertTextChanges","change","newText","FormatAdapter","provideDocumentRangeFormattingEdits","getFormattingEditsForRange","edits","edit","FormatOnTypeAdapter","provideOnTypeFormattingEdits","getFormattingEditsAfterKeystroke","promise","onCancellationRequested","cancel","setupTypeScript","setupMode","setupJavaScript","EcmaScript5","getJavaScriptWorker","resolve","reject","getTypeScriptWorker","first","more","registerCompletionItemProvider","registerSignatureHelpProvider","registerHoverProvider","registerDocumentHighlightProvider","registerDefinitionProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerDocumentRangeFormattingEditProvider","registerOnTypeFormattingEditProvider","setLanguageConfiguration","richEditConfiguration","setTokensProvider","__webpack_require__","__webpack_exports__","wordPattern","comments","lineComment","blockComment","brackets","onEnterRules","beforeText","afterText","action","indentAction","IndentAction","IndentOutdent","appendText","removeText","autoClosingPairs","open","close","notIn","folding","RegExp","end"],"mappings":"iGAMAA,WAKA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAA,IAAAC,EAAAH,IAAAF,EAAAM,WAAAC,EAAAC,EAAAC,EAAAP,IAAAF,EAAAM,WAAAI,EAAAC,EACA,OACAC,gBAAA,WAAsC,WAAAC,EAAAX,EAAAE,EAAA,EAAAU,MAAA,IACtCC,SAAA,SAAAC,EAAAC,GAA0C,OA6B1C,SAAAZ,EAAAI,EAAAN,EAAAc,EAAAC,GAEA,IAAAC,GACAC,UACAC,SAAA,IAAAR,EAAAI,EAAAf,SAAAE,EAAA,EAAAU,MAAA,IAEA,SAAAQ,EAAAC,EAAAC,GACA,IAAAL,EAAAC,OAAAK,QAAAN,EAAAC,OAAAD,EAAAC,OAAAK,OAAA,GAAAC,SAAAF,GACAL,EAAAC,OAAAO,MACAJ,aACAG,OAAAF,IAIA,IAAAI,EAAAX,EAAAf,WAAAF,EAAAM,WAEA,IAAAsB,GA8DA,SAAAC,EAAAb,EAAAM,GACA,OAAAN,EAAAc,QAAA,MAEA,OADAR,EAAAO,EAAA,oBACA,EAjEAE,CAAA,EAAAb,EAAAI,GACA,OAAAH,EAEA,IAAAa,EAAA7B,EAAA8B,0BAAAf,EAAAD,EAAAiB,UAAA,GAAAC,EAAA,EACAhB,EAAAE,SAAAa,SAAAF,EAAAI,cACAjB,EAAAE,SAAAgB,eAAAL,EAAAI,gBAAAhC,EAAA,EAAAkC,2BAAArB,EAAAoB,gBAAA,YAAAE,KAAArB,IACA,QAAAsB,EAAA,EAAAC,EAAAT,EAAAU,QAAyCF,EAAAC,EAAAhB,OAAgBe,IAAA,CACzD,IACAhB,EADAmB,EAAAF,EAAAD,GAEA,GAAAG,EAAAC,iBAAAxC,EAAA,EAAAyC,YAAA,CAEA,IAAAC,EAAA5B,EAAA6B,WAAAZ,GACAX,EAAAnB,EAAAyC,IAAArC,EAAAkC,EAAAC,gBACAtB,EAAAa,EAAAX,QAEAmB,EAAAC,iBAAAxC,EAAA,EAAA4C,QAEA7B,EAAAE,SAAAgB,gBAAA,eAAAE,KAAArB,EAAA+B,OAAAd,EAAAQ,EAAAlB,SACAH,EAAAa,EAAAP,EAAA,mCAGAN,EAAAa,EAAAP,EAAA,2BAKAN,EAAAa,EAAA1B,EAAAkC,EAAAC,iBAAA,IAEAT,GAAAQ,EAAAlB,OAEA,OAAAN,EA3E0CJ,CAAAV,EAAAI,EAAAN,EAAAc,EAAAD,MAR1C,SAAAhB,GACAA,IAAA,2BACAA,IAAA,6BAFA,CAGCA,WAQD,IAAAa,EAAA,WACA,SAAAA,EAAAX,EAAAgC,EAAAG,GACAa,KAAAhD,WACAgD,KAAAhB,WACAgB,KAAAb,iBAoBA,OAlBAxB,EAAAsC,UAAAC,MAAA,WACA,WAAAvC,EAAAqC,KAAAhD,SAAAgD,KAAAhB,SAAAgB,KAAAb,iBAEAxB,EAAAsC,UAAAE,OAAA,SAAAC,GACA,OAAAA,IAAAJ,SAGAI,gBAAAzC,KAGAqC,KAAAhB,WAAAoB,EAAApB,UAGAgB,KAAAb,iBAAAiB,EAAAjB,iBAKAxB,EAxBA,GA0EA,IAAAN,EAAAgD,OAAAC,OAAA,MACAjD,EAAA,IAAAwC,WAAA,+BACAxC,EAAA,IAAAwC,WAAA,+BACAxC,EAAA,IAAqBwC,WAAA,2BACrBxC,EAAA,IAAqBwC,WAAA,2BACrBxC,EAAA,IAAAwC,WAAA,yBACAxC,EAAA,IAAAwC,WAAA,yBACA,IAAArC,EAAA6C,OAAAC,OAAA,MACA9C,EAAAN,EAAA,EAAAqD,YAAA,gBACA/C,EAAAN,EAAA,EAAAsD,SAAA,aACAhD,EAAAN,EAAA,EAAAuD,UAAA,eACAjD,EAAAN,EAAA,EAAAyC,aAAA,eACAnC,EAAAN,EAAA,EAAAwD,eAAA,YACAlD,EAAAN,EAAA,EAAAyD,eAAA,YACAnD,EAAAN,EAAA,EAAA0D,eAAA,YACA,IAAAtD,EAAA+C,OAAAC,OAAA,MACAhD,EAAA,IAAAuC,WAAA,+BACAvC,EAAA,IAAAuC,WAAA,+BACAvC,EAAA,IAAqBuC,WAAA,2BACrBvC,EAAA,IAAqBuC,WAAA,2BACrBvC,EAAA,IAAAuC,WAAA,yBACAvC,EAAA,IAAAuC,WAAA,yBACA,IAAApC,EAAA4C,OAAAC,OAAA,MACA7C,EAAAP,EAAA,EAAAqD,YAAA,gBACA9C,EAAAP,EAAA,EAAAsD,SAAA,aACA/C,EAAAP,EAAA,EAAAuD,UAAA,eACAhD,EAAAP,EAAA,EAAAyC,aAAA,eACAlC,EAAAP,EAAA,EAAAwD,eAAA,YACAjD,EAAAP,EAAA,EAAAyD,eAAA,YACAlD,EAAAP,EAAA,EAAA0D,eAAA,YCpHA,IAAAC,EAAAC,OAAAD,QACAE,EAAA,WACA,SAAAA,EAAAC,EAAAC,GACA,IAAAC,EAAAlB,KACAA,KAAAmB,QAAAH,EACAhB,KAAAoB,UAAAH,EACAjB,KAAAqB,QAAA,KACArB,KAAAsB,mBAAAC,YAAA,WAA2D,OAAAL,EAAAM,gBAA+B,KAC1FxB,KAAAyB,cAAA,EACAzB,KAAA0B,sBAAA1B,KAAAoB,UAAAO,YAAA,WAA6E,OAAAT,EAAAU,gBA+D7E,OA7DAb,EAAAd,UAAA2B,YAAA,WACA5B,KAAAqB,UACArB,KAAAqB,QAAAQ,UACA7B,KAAAqB,QAAA,MAEArB,KAAA8B,QAAA,MAEAf,EAAAd,UAAA4B,QAAA,WACAE,cAAA/B,KAAAsB,oBACAtB,KAAA0B,sBAAAG,UACA7B,KAAA4B,eAEAb,EAAAd,UAAAuB,aAAA,WACA,GAAAxB,KAAAqB,QAAA,CAGA,IAAAW,EAAAhC,KAAAoB,UAAAa,uBACAC,EAAAC,KAAAC,MAAApC,KAAAyB,cACAO,EAAA,GAAAE,EAAAF,GACAhC,KAAA4B,gBAGAb,EAAAd,UAAAoC,WAAA,WACA,IAAAnB,EAAAlB,KAEA,GADAA,KAAAyB,cAAAU,KAAAC,OACApC,KAAA8B,QAAA,CACA9B,KAAAqB,QAAAP,OAAAwB,OAAAC,iBAEAC,SAAA,kCACAC,MAAAzC,KAAAmB,QAEAuB,YACAC,gBAAA3C,KAAAoB,UAAAwB,qBACAC,UAAA7C,KAAAoB,UAAA0B,kBAGA,IAAAC,EAAA/C,KAAAqB,QAAA2B,WACAhD,KAAAoB,UAAA6B,sBACAF,IAAAG,KAAA,SAAAC,GACA,OAAAjC,EAAAG,QAAA+B,oBAAAtC,OAAAwB,OAAAe,YACAC,OAAA,SAAAC,GAAkD,OAAAA,EAAAC,cAAAtC,EAAAC,UAClDsC,IAAA,SAAAF,GAA+C,OAAAA,EAAAG,UAG/C1D,KAAA8B,QAAAiB,EAEA,OAAA/C,KAAA8B,SAEAf,EAAAd,UAAA0D,yBAAA,WAGA,IAFA,IAKA7B,EAUAiB,EACAa,EACAC,EACAC,EAlBA5C,EAAAlB,KACA+D,KACAzE,EAAA,EAAwBA,EAAA0E,UAAAzF,OAAuBe,IAC/CyE,EAAAzE,GAAA0E,UAAA1E,GAGA,OASAyD,EATA/C,KAAAqC,aAAAa,KAAA,SAAAe,GACAnC,EAAAmC,IACSf,KAAA,SAAAgB,GACT,OAAAhD,EAAAG,QAAA+B,oBAAAW,KACSb,KAAA,SAAAgB,GAAqB,OAAApC,IAQ9BgC,EAAA,IAAAjD,EAAA,SAAAsD,EAAAC,GACAR,EAAAO,EACAN,EAAAO,GACK,cACLrB,EAAAG,KAAAU,EAAAC,GACAC,GAXA/C,EAvEA,GCDA,IACAsD,EADAC,GACAD,EAAAhE,OAAAkE,iBACUC,wBAAgBC,OAAA,SAAAC,EAAAC,GAAsCD,EAAAF,UAAAG,IAChE,SAAAD,EAAAC,GAAyB,QAAA5B,KAAA4B,IAAAC,eAAA7B,KAAA2B,EAAA3B,GAAA4B,EAAA5B,KACzB,SAAA2B,EAAAC,GAEA,SAAAE,IAAuB7E,KAAA8E,YAAAJ,EADvBL,EAAAK,EAAAC,GAEAD,EAAAzE,UAAA,OAAA0E,EAAAtE,OAAAC,OAAAqE,IAAAE,EAAA5E,UAAA0E,EAAA1E,UAAA,IAAA4E,KAIAE,EAAAjE,OAAAiE,IACAC,EAAAlE,OAAAD,QACAoE,EAAA,WACA,SAAAA,EAAA5D,GACArB,KAAAqB,UAiBA,OAfA4D,EAAAhF,UAAAiF,kBAAA,SAAAxB,EAAAyB,GAEA,OADArE,OAAAwB,OAAA8C,SAAA1B,GACA2B,YAAAF,IAEAF,EAAAhF,UAAAqF,kBAAA,SAAA5B,EAAAzE,GAEA,OADA6B,OAAAwB,OAAA8C,SAAA1B,GACA6B,cAAAtG,IAEAgG,EAAAhF,UAAAuF,iBAAA,SAAA9B,EAAA+B,GACA,IAAAC,EAAA1F,KAAAsF,kBAAA5B,EAAA+B,EAAAE,OACAC,EAAA5F,KAAAsF,kBAAA5B,EAAA+B,EAAAE,MAAAF,EAAAlH,QAGA,OAAgBsH,gBAFhBH,EAAAI,WAEgBC,YAFhBL,EAAAM,OAEgBC,cADhBL,EAAAE,WACgBI,UADhBN,EAAAI,SAGAf,EAnBA,GAuBAkB,EAAA,SAAAC,GAEA,SAAAC,EAAAjF,EAAAkF,EAAAnD,GACA,IAAAjC,EAAAkF,EAAAG,KAAAvG,KAAAmD,IAAAnD,KACAkB,EAAAE,YACAF,EAAAoF,YACApF,EAAAsF,gBACAtF,EAAAuF,UAAApG,OAAAC,OAAA,MACA,IAAAoG,EAAA,SAAAnD,GACA,GAAAA,EAAAC,cAAA8C,EAAA,CAGA,IAAAK,EACAC,EAAArD,EAAAsD,mBAAA,WACAC,aAAAH,GACAA,EAAAI,WAAA,WAAiD,OAAA7F,EAAA8F,YAAAzD,EAAAG,MAAuC,OAExFxC,EAAAuF,UAAAlD,EAAAG,IAAAuD,aACApF,QAAA,WACA+E,EAAA/E,UACAiF,aAAAH,KAGAzF,EAAA8F,YAAAzD,EAAAG,OAEAwD,EAAA,SAAA3D,GACAzC,OAAAwB,OAAA6E,gBAAA5D,EAAArC,EAAAoF,cACA,IAAAc,EAAA7D,EAAAG,IAAAuD,WACA/F,EAAAuF,UAAAW,KACAlG,EAAAuF,UAAAW,GAAAvF,iBACAX,EAAAuF,UAAAW,KA0BA,OAvBAlG,EAAAsF,aAAA/H,KAAAqC,OAAAwB,OAAA+E,iBAAAX,IACAxF,EAAAsF,aAAA/H,KAAAqC,OAAAwB,OAAAgF,mBAAAJ,IACAhG,EAAAsF,aAAA/H,KAAAqC,OAAAwB,OAAAiF,yBAAA,SAAAC,GACAN,EAAAM,EAAAjE,OACAmD,EAAAc,EAAAjE,UAEArC,EAAAsF,aAAA/H,MACAoD,QAAA,WACA,QAAAvC,EAAA,EAAAC,EAAAuB,OAAAwB,OAAAe,YAAgE/D,EAAAC,EAAAhB,OAAgBe,IAAA,CAChF,IAAAiE,EAAAhE,EAAAD,GACA4H,EAAA3D,OAIArC,EAAAsF,aAAA/H,KAAAyC,EAAAE,UAAAO,YAAA,WAEA,QAAArC,EAAA,EAAAC,EAAAuB,OAAAwB,OAAAe,YAA4D/D,EAAAC,EAAAhB,OAAgBe,IAAA,CAC5E,IAAAiE,EAAAhE,EAAAD,GACA4H,EAAA3D,GACAmD,EAAAnD,OAGAzC,OAAAwB,OAAAe,YAAAoE,QAAAf,GACAxF,EA+CA,OAtGAoD,EAAA+B,EAAAD,GAyDAC,EAAApG,UAAA4B,QAAA,WACA7B,KAAAwG,aAAAiB,QAAA,SAAA/C,GAAgD,OAAAA,KAAA7C,YAChD7B,KAAAwG,iBAEAH,EAAApG,UAAA+G,YAAA,SAAAU,GACA,IAAAxG,EAAAlB,KACAA,KAAAqB,QAAAqG,GAAAxE,KAAA,SAAAC,GACA,IAAArC,OAAAwB,OAAA8C,SAAAsC,GAEA,YAEA,IAAAC,KACApI,EAAA2B,EAAAE,UAAAwG,wBAAAC,EAAAtI,EAAAsI,mBAAAC,EAAAvI,EAAAuI,qBAOA,OANAD,GACAF,EAAAlJ,KAAA0E,EAAA4E,wBAAAL,EAAAT,aAEAa,GACAH,EAAAlJ,KAAA0E,EAAA6E,uBAAAN,EAAAT,aAEAjC,EAAAiD,KAAAN,KACSzE,KAAA,SAAAgF,GACT,IAAAA,IAAApH,OAAAwB,OAAA8C,SAAAsC,GAEA,YAEA,IAAAS,EAAAD,EACAE,OAAA,SAAArF,EAAAoB,GAAyC,OAAAA,EAAAkE,OAAAtF,QACzCU,IAAA,SAAAiB,GAAmC,OAAAxD,EAAAoH,oBAAAZ,EAAAhD,KACnC5D,OAAAwB,OAAA6E,gBAAArG,OAAAwB,OAAA8C,SAAAsC,GAAAxG,EAAAoF,UAAA6B,KACSI,UAAAC,EAAA,SAAAC,GACTC,QAAAC,MAAAF,MAGApC,EAAApG,UAAAqI,oBAAA,SAAAZ,EAAAkB,GACA,IAAArJ,EAAAS,KAAAsF,kBAAAoC,EAAAkB,EAAAjD,OAAAE,EAAAtG,EAAAuG,WAAAC,EAAAxG,EAAAyG,OACA6C,EAAA7I,KAAAsF,kBAAAoC,EAAAkB,EAAAjD,MAAAiD,EAAArK,QAAA0H,EAAA4C,EAAA/C,WAAAI,EAAA2C,EAAA7C,OACA,OACA8C,SAAAhI,OAAAiI,eAAAC,MACAnD,kBACAE,cACAE,gBACAC,YACA+C,QAAA/L,EAAA,EAAA0L,EAAAM,YAAA,QAGA7C,EAvGA,CAwGCpB,GAEDkE,EAAA,SAAA/C,GAEA,SAAAgD,IACA,cAAAhD,KAAAiD,MAAArJ,KAAAgE,YAAAhE,KAmFA,OArFAsE,EAAA8E,EAAAhD,GAIA/F,OAAAiJ,eAAAF,EAAAnJ,UAAA,qBACAsJ,IAAA,WACA,aAEAC,YAAA,EACAC,cAAA,IAEAL,EAAAnJ,UAAAyJ,uBAAA,SAAAnG,EAAA4B,EAAAwE,GACApG,EAAAqG,qBAAAzE,GAAA,IACAuC,EAAAnE,EAAAG,IACAzE,EAAAe,KAAAkF,kBAAAwC,EAAAvC,GACA,OAAA0E,EAAAF,EAAA3J,KAAAqB,QAAAqG,GAAAxE,KAAA,SAAAC,GACA,OAAAA,EAAA2G,yBAAApC,EAAAT,WAAAhI,KACSiE,KAAA,SAAA6G,GACT,GAAAA,EAYA,OATAA,EAAAvK,QAAAiE,IAAA,SAAAhE,GACA,OACAiE,IAAAgE,EACAvC,WACA1C,MAAAhD,EAAAuK,KACAC,SAAAxK,EAAAwK,SACAC,KAAAd,EAAAe,YAAA1K,EAAAyK,aAMAd,EAAAnJ,UAAAmK,sBAAA,SAAAC,EAAAV,GACA,IAAAzI,EAAAlB,KACAsK,EAAAD,EACA3C,EAAA4C,EAAA5G,IACAyB,EAAAmF,EAAAnF,SACA,OAAA0E,EAAAF,EAAA3J,KAAAqB,QAAAqG,GAAAxE,KAAA,SAAAC,GACA,OAAAA,EAAAoH,0BAAA7C,EAAAT,WAAA/F,EAAAgE,kBAAAwC,EAAAvC,GAAAmF,EAAA7H,SACSS,KAAA,SAAAsH,GACT,OAAAA,GAIA9G,IAAAgE,EACAvC,WACA1C,MAAA+H,EAAAR,KACAE,KAAAd,EAAAe,YAAAK,EAAAN,MACAO,OAAAvN,EAAA,EAAAsN,EAAAE,cACAC,cAAAzN,EAAA,EAAAsN,EAAAG,gBARAL,MAYAlB,EAAAe,YAAA,SAAAD,GACA,OAAAA,GACA,KAAAU,EAAAC,cACA,KAAAD,EAAAE,QACA,OAAAhK,OAAAiK,UAAAC,mBAAAxK,QACA,KAAAoK,EAAAK,SACA,KAAAL,EAAAM,cACA,OAAApK,OAAAiK,UAAAC,mBAAAG,SACA,KAAAP,EAAAQ,eACA,KAAAR,EAAAS,kBACA,KAAAT,EAAAU,kBACA,OAAAxK,OAAAiK,UAAAC,mBAAAO,MACA,KAAAX,EAAAY,SACA,KAAAZ,EAAAa,eACA,KAAAb,EAAAc,mBACA,KAAAd,EAAAe,cACA,KAAAf,EAAAgB,eACA,OAAA9K,OAAAiK,UAAAC,mBAAAa,SACA,KAAAjB,EAAAkB,KACA,OAAAhL,OAAAiK,UAAAC,mBAAAe,KACA,KAAAnB,EAAAoB,OACA,OAAAlL,OAAAiK,UAAAC,mBAAAiB,OACA,KAAArB,EAAAsB,MACA,OAAApL,OAAAiK,UAAAC,mBAAAmB,MACA,KAAAvB,EAAAwB,UACA,OAAAtL,OAAAiK,UAAAC,mBAAAqB,UACA,KAAAzB,EAAA0B,QACA,OAAAxL,OAAAiK,UAAAC,mBAAAuB,KAEA,OAAAzL,OAAAiK,UAAAC,mBAAAwB,UAEApD,EAtFA,CAuFCnE,GAEDwH,EAAA,SAAArG,GAEA,SAAAsG,IACA,IAAAxL,EAAA,OAAAkF,KAAAiD,MAAArJ,KAAAgE,YAAAhE,KAEA,OADAkB,EAAAyL,gCAAA,SACAzL,EAuCA,OA3CAoD,EAAAoI,EAAAtG,GAMAsG,EAAAzM,UAAA2M,qBAAA,SAAArJ,EAAA4B,EAAAwE,GACA,IAAAzI,EAAAlB,KACA0H,EAAAnE,EAAAG,IACA,OAAAmG,EAAAF,EAAA3J,KAAAqB,QAAAqG,GAAAxE,KAAA,SAAAC,GAA2F,OAAAA,EAAA0J,sBAAAnF,EAAAT,WAAA/F,EAAAgE,kBAAAwC,EAAAvC,MAAyGjC,KAAA,SAAA6G,GACpM,GAAAA,EAAA,CAGA,IAAA9L,GACA6O,gBAAA/C,EAAAgD,kBACAC,gBAAAjD,EAAAkD,cACAC,eAwBA,OAtBAnD,EAAAoD,MAAA1F,QAAA,SAAA4C,GACA,IAAA+C,GACA3K,MAAA,GACAkI,cAAA,KACA0C,eAEAD,EAAA3K,OAAAvF,EAAA,EAAAmN,EAAAiD,oBACAjD,EAAAgD,WAAA5F,QAAA,SAAA1E,EAAAwK,EAAAC,GACA,IAAA/K,EAAAvF,EAAA,EAAA6F,EAAA2H,cACA+C,GACAhL,QACAkI,cAAAzN,EAAA,EAAA6F,EAAA4H,gBAEAyC,EAAA3K,SACA2K,EAAAC,WAAA5O,KAAAgP,GACAF,EAAAC,EAAAjP,OAAA,IACA6O,EAAA3K,OAAAvF,EAAA,EAAAmN,EAAAqD,0BAGAN,EAAA3K,OAAAvF,EAAA,EAAAmN,EAAAsD,oBACA1P,EAAAiP,WAAAzO,KAAA2O,KAEAnP,OAGAyO,EA5CA,CA6CCzH,GAGD2I,EAAA,SAAAxH,GAEA,SAAAyH,IACA,cAAAzH,KAAAiD,MAAArJ,KAAAgE,YAAAhE,KA+BA,OAjCAsE,EAAAuJ,EAAAzH,GAIAyH,EAAA5N,UAAA6N,aAAA,SAAAvK,EAAA4B,EAAAwE,GACA,IAAAzI,EAAAlB,KACA0H,EAAAnE,EAAAG,IACA,OAAAmG,EAAAF,EAAA3J,KAAAqB,QAAAqG,GAAAxE,KAAA,SAAAC,GACA,OAAAA,EAAA4K,uBAAArG,EAAAT,WAAA/F,EAAAgE,kBAAAwC,EAAAvC,MACSjC,KAAA,SAAA6G,GACT,GAAAA,EAAA,CAGA,IAAAY,EAAAzN,EAAA,EAAA6M,EAAAY,eACAqD,EAAAjE,EAAAiE,KAAAjE,EAAAiE,KAAAvK,IAAA,SAAAwK,GACA,IAAAxL,EAAA,KAAAwL,EAAAjE,KAAA,IACA,OAAAiE,EAAAjQ,KAGAyE,GAAAwL,EAAAjQ,KAAAkQ,MAAA,kBAAAD,EAAAjQ,KAAA,MAAAiQ,EAAAjQ,MAFAyE,IAIAwF,KAAA,aACAkG,EAAAjR,EAAA,EAAA6M,EAAAW,cACA,OACA0D,MAAAlN,EAAAsE,iBAAAkC,EAAAqC,EAAAsE,UACAF,WACAG,MAAAH,IAEAG,MAAA3D,GAAAqD,EAAA,OAAAA,EAAA,YAKAH,EAlCA,CAmCC5I,GAGDsJ,EAAA,SAAAnI,GAEA,SAAAmI,IACA,cAAAnI,KAAAiD,MAAArJ,KAAAgE,YAAAhE,KAmBA,OArBAsE,EAAAiK,EAAAnI,GAIAmI,EAAAtO,UAAAuO,0BAAA,SAAAjL,EAAA4B,EAAAwE,GACA,IAAAzI,EAAAlB,KACA0H,EAAAnE,EAAAG,IACA,OAAAmG,EAAAF,EAAA3J,KAAAqB,QAAAqG,GAAAxE,KAAA,SAAAC,GACA,OAAAA,EAAAsL,yBAAA/G,EAAAT,WAAA/F,EAAAgE,kBAAAwC,EAAAvC,MACSjC,KAAA,SAAA1D,GACT,GAAAA,EAGA,OAAAA,EAAAiE,IAAA,SAAAhE,GACA,OACA2O,MAAAlN,EAAAsE,iBAAAkC,EAAAjI,EAAA4O,UACAnE,KAAAzK,EAAAiP,cAAA5N,OAAAiK,UAAA4D,sBAAAC,MAAA9N,OAAAiK,UAAA4D,sBAAAE,YAKAN,EAtBA,CAuBCtJ,GAGD6J,EAAA,SAAA1I,GAEA,SAAA0I,IACA,cAAA1I,KAAAiD,MAAArJ,KAAAgE,YAAAhE,KAyBA,OA3BAsE,EAAAwK,EAAA1I,GAIA0I,EAAA7O,UAAA8O,kBAAA,SAAAxL,EAAA4B,EAAAwE,GACA,IAAAzI,EAAAlB,KACA0H,EAAAnE,EAAAG,IACA,OAAAmG,EAAAF,EAAA3J,KAAAqB,QAAAqG,GAAAxE,KAAA,SAAAC,GACA,OAAAA,EAAA6L,wBAAAtH,EAAAT,WAAA/F,EAAAgE,kBAAAwC,EAAAvC,MACSjC,KAAA,SAAA1D,GACT,GAAAA,EAAA,CAIA,IADA,IAAAV,KACAQ,EAAA,EAAA2P,EAAAzP,EAAiDF,EAAA2P,EAAA1Q,OAAuBe,IAAA,CACxE,IAAAG,EAAAwP,EAAA3P,GACAoE,EAAAqB,EAAAmK,MAAAzP,EAAA0P,UACArO,OAAAwB,OAAA8C,SAAA1B,IACA5E,EAAAL,MACAiF,MACA0K,MAAAlN,EAAAsE,iBAAA9B,EAAAjE,EAAA4O,YAIA,OAAAvP,OAGAgQ,EA5BA,CA6BC7J,GAGDmK,EAAA,SAAAhJ,GAEA,SAAAgJ,IACA,cAAAhJ,KAAAiD,MAAArJ,KAAAgE,YAAAhE,KAyBA,OA3BAsE,EAAA8K,EAAAhJ,GAIAgJ,EAAAnP,UAAAoP,kBAAA,SAAA9L,EAAA4B,EAAAmK,EAAA3F,GACA,IAAAzI,EAAAlB,KACA0H,EAAAnE,EAAAG,IACA,OAAAmG,EAAAF,EAAA3J,KAAAqB,QAAAqG,GAAAxE,KAAA,SAAAC,GACA,OAAAA,EAAAoM,wBAAA7H,EAAAT,WAAA/F,EAAAgE,kBAAAwC,EAAAvC,MACSjC,KAAA,SAAA1D,GACT,GAAAA,EAAA,CAIA,IADA,IAAAV,KACAQ,EAAA,EAAAkQ,EAAAhQ,EAAiDF,EAAAkQ,EAAAjR,OAAuBe,IAAA,CACxE,IAAAG,EAAA+P,EAAAlQ,GACAoE,EAAAqB,EAAAmK,MAAAzP,EAAA0P,UACArO,OAAAwB,OAAA8C,SAAA1B,IACA5E,EAAAL,MACAiF,MACA0K,MAAAlN,EAAAsE,iBAAA9B,EAAAjE,EAAA4O,YAIA,OAAAvP,OAGAsQ,EA5BA,CA6BCnK,GAGDwK,EAAA,SAAArJ,GAEA,SAAAqJ,IACA,cAAArJ,KAAAiD,MAAArJ,KAAAgE,YAAAhE,KAgCA,OAlCAsE,EAAAmL,EAAArJ,GAIAqJ,EAAAxP,UAAAyP,uBAAA,SAAAnM,EAAAoG,GACA,IAAAzI,EAAAlB,KACA0H,EAAAnE,EAAAG,IACA,OAAAmG,EAAAF,EAAA3J,KAAAqB,QAAAqG,GAAAxE,KAAA,SAAAC,GAA2F,OAAAA,EAAAwM,sBAAAjI,EAAAT,cAA4D/D,KAAA,SAAAiK,GACvJ,GAAAA,EAAA,CAGA,IAAAyC,EAAA,SAAAC,EAAAxF,EAAAyF,GACA,IAAAhR,GACAkL,KAAAK,EAAArM,KACAkM,KAAA6F,EAAA1F,EAAAH,OAAApJ,OAAAiK,UAAAiF,WAAA7E,SACA8E,UACAvM,IAAAgE,EACA0G,MAAAlN,EAAAsE,iBAAAkC,EAAA2C,EAAA6F,MAAA,KAEAC,cAAAL,GAEA,GAAAzF,EAAA+F,YAAA/F,EAAA+F,WAAA7R,OAAA,EACA,QAAAe,EAAA,EAAAC,EAAA8K,EAAA+F,WAA0D9Q,EAAAC,EAAAhB,OAAgBe,IAAA,CAC1E,IAAA+Q,EAAA9Q,EAAAD,GACAsQ,EAAAC,EAAAQ,EAAAvR,EAAAkL,MAGA6F,EAAApR,KAAAK,IAEAA,KAEA,OADAqO,EAAA1F,QAAA,SAAA4C,GAA2C,OAAAuF,EAAA9Q,EAAAuL,KAC3CvL,OAGA2Q,EAnCA,CAoCCxK,GAED2F,EAAA,WACA,SAAAA,KA8BA,OA5BAA,EAAA0F,QAAA,GACA1F,EAAAE,QAAA,UACAF,EAAA2F,OAAA,SACA3F,EAAAoB,OAAA,SACApB,EAAAsB,MAAA,QACAtB,EAAAwB,UAAA,YACAxB,EAAAtM,KAAA,OACAsM,EAAAkB,KAAA,OACAlB,EAAAK,SAAA,MACAL,EAAAM,cAAA,YACAN,EAAAY,SAAA,WACAZ,EAAA4F,cAAA,iBACA5F,EAAAa,eAAA,SACAb,EAAAS,kBAAA,SACAT,EAAAU,kBAAA,SACAV,EAAAQ,eAAA,WACAR,EAAA6F,0BAAA,cACA7F,EAAAe,cAAA,OACAf,EAAAgB,eAAA,QACAhB,EAAAc,mBAAA,YACAd,EAAA6C,UAAA,YACA7C,EAAA8F,cAAA,iBACA9F,EAAAC,cAAA,iBACAD,EAAAnI,MAAA,QACAmI,EAAA+F,MAAA,QACA/F,EAAAgG,MAAA,QACAhG,EAAAiG,IAAA,MACAjG,EAAA0B,QAAA,UACA1B,EA/BA,GAkCAmF,EAAA1P,OAAAC,OAAA,MACAyP,EAAAnF,EAAAoB,QAAAlL,OAAAiK,UAAAiF,WAAA/D,OACA8D,EAAAnF,EAAAsB,OAAApL,OAAAiK,UAAAiF,WAAA7D,MACA4D,EAAAnF,EAAAkB,MAAAhL,OAAAiK,UAAAiF,WAAAjE,KACAgE,EAAAnF,EAAAwB,WAAAtL,OAAAiK,UAAAiF,WAAA3D,UACA0D,EAAAnF,EAAAa,gBAAA3K,OAAAiK,UAAAiF,WAAAc,OACAf,EAAAnF,EAAAQ,gBAAAtK,OAAAiK,UAAAiF,WAAAxD,SACAuD,EAAAnF,EAAAS,mBAAAvK,OAAAiK,UAAAiF,WAAAxD,SACAuD,EAAAnF,EAAAU,mBAAAxK,OAAAiK,UAAAiF,WAAAxD,SACAuD,EAAAnF,EAAAK,UAAAnK,OAAAiK,UAAAiF,WAAA7E,SACA4E,EAAAnF,EAAAgG,OAAA9P,OAAAiK,UAAAiF,WAAA7E,SACA4E,EAAAnF,EAAAM,eAAApK,OAAAiK,UAAAiF,WAAA7E,SACA4E,EAAAnF,EAAAK,UAAAnK,OAAAiK,UAAAiF,WAAA7E,SACA4E,EAAAnF,EAAAY,UAAA1K,OAAAiK,UAAAiF,WAAAnE,SACAkE,EAAAnF,EAAA4F,eAAA1P,OAAAiK,UAAAiF,WAAAnE,SAEA,IC5eAkF,EACAC,ED2eAC,EAAA,SAAA7K,GAEA,SAAA8K,IACA,cAAA9K,KAAAiD,MAAArJ,KAAAgE,YAAAhE,KA2BA,OA7BAsE,EAAA4M,EAAA9K,GAIA8K,EAAAC,gBAAA,SAAAC,GACA,OACAC,oBAAAD,EAAAE,aACAC,QAAAH,EAAAI,QACAC,WAAAL,EAAAI,QACAE,YAAAxU,EAAA,EAAAyU,MACAC,iBAAA,KACAC,gCAAA,EACAC,0CAAA,EACAC,0CAAA,EACAC,iDAAA,EACAC,sDAAA,EACAC,4DAAA,EACAC,yDAAA,EACAC,6DAAA,EACAC,yCAAA,EACAC,qCAAA,IAGApB,EAAAjR,UAAAsS,oBAAA,SAAA7O,EAAA8O,GACA,OACAxU,KAAAwU,EAAAC,QACArE,MAAApO,KAAAwF,iBAAA9B,EAAA8O,EAAA/M,QAGAyL,EA9BA,CA+BCjM,GAEDyN,EAAA,SAAAtM,GAEA,SAAAsM,IACA,cAAAtM,KAAAiD,MAAArJ,KAAAgE,YAAAhE,KAaA,OAfAsE,EAAAoO,EAAAtM,GAIAsM,EAAAzS,UAAA0S,oCAAA,SAAApP,EAAA6K,EAAAgD,EAAAzH,GACA,IAAAzI,EAAAlB,KACA0H,EAAAnE,EAAAG,IACA,OAAAmG,EAAAF,EAAA3J,KAAAqB,QAAAqG,GAAAxE,KAAA,SAAAC,GACA,OAAAA,EAAAyP,2BAAAlL,EAAAT,WAAA/F,EAAAgE,kBAAAwC,GAA6G5B,WAAAsI,EAAAvI,gBAAAG,OAAAoI,EAAArI,cAA+D7E,EAAAgE,kBAAAwC,GAAsC5B,WAAAsI,EAAAnI,cAAAD,OAAAoI,EAAAlI,YAA2D+K,EAAAE,gBAAAC,MACpQlO,KAAA,SAAA2P,GACT,GAAAA,EACA,OAAAA,EAAApP,IAAA,SAAAqP,GAAkD,OAAA5R,EAAAqR,oBAAA7K,EAAAoL,SAIlDJ,EAhBA,CAiBCzB,GAED8B,EAAA,SAAA3M,GAEA,SAAA2M,IACA,cAAA3M,KAAAiD,MAAArJ,KAAAgE,YAAAhE,KAoBA,OAtBAsE,EAAAyO,EAAA3M,GAIA/F,OAAAiJ,eAAAyJ,EAAA9S,UAAA,+BACAsJ,IAAA,WACA,WAAsB,IAAK,OAE3BC,YAAA,EACAC,cAAA,IAEAsJ,EAAA9S,UAAA+S,6BAAA,SAAAzP,EAAA4B,EAAAvF,EAAAwR,EAAAzH,GACA,IAAAzI,EAAAlB,KACA0H,EAAAnE,EAAAG,IACA,OAAAmG,EAAAF,EAAA3J,KAAAqB,QAAAqG,GAAAxE,KAAA,SAAAC,GACA,OAAAA,EAAA8P,iCAAAvL,EAAAT,WAAA/F,EAAAgE,kBAAAwC,EAAAvC,GAAAvF,EAAAqR,EAAAE,gBAAAC,MACSlO,KAAA,SAAA2P,GACT,GAAAA,EACA,OAAAA,EAAApP,IAAA,SAAAqP,GAAkD,OAAA5R,EAAAqR,oBAAA7K,EAAAoL,SAIlDC,EAvBA,CAwBC9B,GAKD,SAAApH,EAAAF,EAAAuJ,GAEA,OADAvJ,EAAAwJ,wBAAA,WAA+C,OAAAD,EAAAE,WAC/CF,EC7jBA,SAAAG,EAAApS,GACA+P,EAAAsC,EAAArS,EAAA,aAAAnE,EAAAM,YAEA,SAAAmW,EAAAtS,GACA8P,EAAAuC,EAAArS,EAAA,aAAAnE,EAAA0W,aAEA,SAAAC,IACA,WAAA3S,OAAAD,QAAA,SAAA6S,EAAAC,GACA,IAAA5C,EACA,OAAA4C,EAAA,8BAEAD,EAAA3C,KAGA,SAAA6C,IACA,WAAA9S,OAAAD,QAAA,SAAA6S,EAAAC,GACA,IAAA3C,EACA,OAAA2C,EAAA,8BAEAD,EAAA1C,KAGA,SAAAsC,EAAArS,EAAAD,EAAAhE,GACA,IAAAiH,EAAA,IAAAlD,EAAAC,EAAAC,GACAkC,EAAA,SAAA0Q,GAEA,IADA,IAAAC,KACAxU,EAAA,EAAwBA,EAAA0E,UAAAzF,OAAuBe,IAC/CwU,EAAAxU,EAAA,GAAA0E,UAAA1E,GAEA,OAAA2E,EAAAN,yBAAA0F,MAAApF,GAAA4P,GAAAxL,OAAAyL,KAcA,OAZAhT,OAAAiK,UAAAgJ,+BAAA/S,EAAA,IAAAmI,EAAAhG,IACArC,OAAAiK,UAAAiJ,8BAAAhT,EAAA,IAAAyL,EAAAtJ,IACArC,OAAAiK,UAAAkJ,sBAAAjT,EAAA,IAAA4M,EAAAzK,IACArC,OAAAiK,UAAAmJ,kCAAAlT,EAAA,IAAAuN,EAAApL,IACArC,OAAAiK,UAAAoJ,2BAAAnT,EAAA,IAAA8N,EAAA3L,IACArC,OAAAiK,UAAAqJ,0BAAApT,EAAA,IAAAoO,EAAAjM,IACArC,OAAAiK,UAAAsJ,+BAAArT,EAAA,IAAAyO,EAAAtM,IACArC,OAAAiK,UAAAuJ,4CAAAtT,EAAA,IAAA0R,EAAAvP,IACArC,OAAAiK,UAAAwJ,qCAAAvT,EAAA,IAAA+R,EAAA5P,IACA,IAAAgD,EAAAlF,EAAAD,EAAAmC,GACArC,OAAAiK,UAAAyJ,yBAAAxT,EAAAyT,GACA3T,OAAAiK,UAAA2J,kBAAA1T,EAAAjE,EAAAC,IACAmG,gJArDAwR,EAAAjQ,EAAAkQ,EAAA,wCAAAhB,IAuDA,IAAAa,GACAI,YAAA,uFACAC,UACAC,YAAA,KACAC,cAAA,YAEAC,WACA,IAAW,MACX,UACA,UAEAC,eAGAC,WAAA,qCACAC,UAAA,YACAC,QAAqBC,aAAAxU,OAAAiK,UAAAwK,aAAAC,cAAAC,WAAA,SAIrBN,WAAA,qCACAE,QAAqBC,aAAAxU,OAAAiK,UAAAwK,aAAA3X,KAAA6X,WAAA,SAIrBN,WAAA,2CACAE,QAAqBC,aAAAxU,OAAAiK,UAAAwK,aAAA3X,KAAA6X,WAAA,QAIrBN,WAAA,0BACAE,QAAqBC,aAAAxU,OAAAiK,UAAAwK,aAAA3X,KAAA8X,WAAA,KAGrBC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,IAAAC,OAAA,YACAF,KAAA,IAAAC,MAAA,IAAAC,OAAA,sBACAF,KAAA,IAAAC,MAAA,IAAAC,OAAA,sBACAF,KAAA,MAAAC,MAAA,MAAAC,OAAA,YAETC,SACA5N,SACAxC,MAAA,IAAAqQ,OAAA,0BACAC,IAAA,IAAAD,OAAA","file":"8.bundle.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ts from './lib/typescriptServices.js';\nexport var Language;\n(function (Language) {\n    Language[Language[\"TypeScript\"] = 0] = \"TypeScript\";\n    Language[Language[\"EcmaScript5\"] = 1] = \"EcmaScript5\";\n})(Language || (Language = {}));\nexport function createTokenizationSupport(language) {\n    var classifier = ts.createClassifier(), bracketTypeTable = language === Language.TypeScript ? tsBracketTypeTable : jsBracketTypeTable, tokenTypeTable = language === Language.TypeScript ? tsTokenTypeTable : jsTokenTypeTable;\n    return {\n        getInitialState: function () { return new State(language, ts.EndOfLineState.None, false); },\n        tokenize: function (line, state) { return tokenize(bracketTypeTable, tokenTypeTable, classifier, state, line); }\n    };\n}\nvar State = /** @class */ (function () {\n    function State(language, eolState, inJsDocComment) {\n        this.language = language;\n        this.eolState = eolState;\n        this.inJsDocComment = inJsDocComment;\n    }\n    State.prototype.clone = function () {\n        return new State(this.language, this.eolState, this.inJsDocComment);\n    };\n    State.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof State)) {\n            return false;\n        }\n        if (this.eolState !== other.eolState) {\n            return false;\n        }\n        if (this.inJsDocComment !== other.inJsDocComment) {\n            return false;\n        }\n        return true;\n    };\n    return State;\n}());\nfunction tokenize(bracketTypeTable, tokenTypeTable, classifier, state, text) {\n    // Create result early and fill in tokens\n    var ret = {\n        tokens: [],\n        endState: new State(state.language, ts.EndOfLineState.None, false)\n    };\n    function appendFn(startIndex, type) {\n        if (ret.tokens.length === 0 || ret.tokens[ret.tokens.length - 1].scopes !== type) {\n            ret.tokens.push({\n                startIndex: startIndex,\n                scopes: type\n            });\n        }\n    }\n    var isTypeScript = state.language === Language.TypeScript;\n    // shebang statement, #! /bin/node\n    if (!isTypeScript && checkSheBang(0, text, appendFn)) {\n        return ret;\n    }\n    var result = classifier.getClassificationsForLine(text, state.eolState, true), offset = 0;\n    ret.endState.eolState = result.finalLexState;\n    ret.endState.inJsDocComment = result.finalLexState === ts.EndOfLineState.InMultiLineCommentTrivia && (state.inJsDocComment || /\\/\\*\\*.*$/.test(text));\n    for (var _i = 0, _a = result.entries; _i < _a.length; _i++) {\n        var entry = _a[_i];\n        var type;\n        if (entry.classification === ts.TokenClass.Punctuation) {\n            // punctions: check for brackets: (){}[]\n            var ch = text.charCodeAt(offset);\n            type = bracketTypeTable[ch] || tokenTypeTable[entry.classification];\n            appendFn(offset, type);\n        }\n        else if (entry.classification === ts.TokenClass.Comment) {\n            // comments: check for JSDoc, block, and line comments\n            if (ret.endState.inJsDocComment || /\\/\\*\\*.*\\*\\//.test(text.substr(offset, entry.length))) {\n                appendFn(offset, isTypeScript ? 'comment.doc.ts' : 'comment.doc.js');\n            }\n            else {\n                appendFn(offset, isTypeScript ? 'comment.ts' : 'comment.js');\n            }\n        }\n        else {\n            // everything else\n            appendFn(offset, tokenTypeTable[entry.classification] || '');\n        }\n        offset += entry.length;\n    }\n    return ret;\n}\nvar tsBracketTypeTable = Object.create(null);\ntsBracketTypeTable['('.charCodeAt(0)] = 'delimiter.parenthesis.ts';\ntsBracketTypeTable[')'.charCodeAt(0)] = 'delimiter.parenthesis.ts';\ntsBracketTypeTable['{'.charCodeAt(0)] = 'delimiter.bracket.ts';\ntsBracketTypeTable['}'.charCodeAt(0)] = 'delimiter.bracket.ts';\ntsBracketTypeTable['['.charCodeAt(0)] = 'delimiter.array.ts';\ntsBracketTypeTable[']'.charCodeAt(0)] = 'delimiter.array.ts';\nvar tsTokenTypeTable = Object.create(null);\ntsTokenTypeTable[ts.TokenClass.Identifier] = 'identifier.ts';\ntsTokenTypeTable[ts.TokenClass.Keyword] = 'keyword.ts';\ntsTokenTypeTable[ts.TokenClass.Operator] = 'delimiter.ts';\ntsTokenTypeTable[ts.TokenClass.Punctuation] = 'delimiter.ts';\ntsTokenTypeTable[ts.TokenClass.NumberLiteral] = 'number.ts';\ntsTokenTypeTable[ts.TokenClass.RegExpLiteral] = 'regexp.ts';\ntsTokenTypeTable[ts.TokenClass.StringLiteral] = 'string.ts';\nvar jsBracketTypeTable = Object.create(null);\njsBracketTypeTable['('.charCodeAt(0)] = 'delimiter.parenthesis.js';\njsBracketTypeTable[')'.charCodeAt(0)] = 'delimiter.parenthesis.js';\njsBracketTypeTable['{'.charCodeAt(0)] = 'delimiter.bracket.js';\njsBracketTypeTable['}'.charCodeAt(0)] = 'delimiter.bracket.js';\njsBracketTypeTable['['.charCodeAt(0)] = 'delimiter.array.js';\njsBracketTypeTable[']'.charCodeAt(0)] = 'delimiter.array.js';\nvar jsTokenTypeTable = Object.create(null);\njsTokenTypeTable[ts.TokenClass.Identifier] = 'identifier.js';\njsTokenTypeTable[ts.TokenClass.Keyword] = 'keyword.js';\njsTokenTypeTable[ts.TokenClass.Operator] = 'delimiter.js';\njsTokenTypeTable[ts.TokenClass.Punctuation] = 'delimiter.js';\njsTokenTypeTable[ts.TokenClass.NumberLiteral] = 'number.js';\njsTokenTypeTable[ts.TokenClass.RegExpLiteral] = 'regexp.js';\njsTokenTypeTable[ts.TokenClass.StringLiteral] = 'string.js';\nfunction checkSheBang(deltaOffset, line, appendFn) {\n    if (line.indexOf('#!') === 0) {\n        appendFn(deltaOffset, 'comment.shebang');\n        return true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(modeId, defaults) {\n        var _this = this;\n        this._modeId = modeId;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var maxIdleTime = this._defaults.getWorkerMaxIdleTime();\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (maxIdleTime > 0 && timePassedSinceLastUsed > maxIdleTime) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        var _this = this;\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `TypeScriptWorker` instance\n                moduleId: 'vs/language/typescript/tsWorker',\n                label: this._modeId,\n                // passed in to the create() method\n                createData: {\n                    compilerOptions: this._defaults.getCompilerOptions(),\n                    extraLibs: this._defaults.getExtraLibs()\n                }\n            });\n            var p = this._worker.getProxy();\n            if (this._defaults.getEagerModelSync()) {\n                p = p.then(function (worker) {\n                    return _this._worker.withSyncedResources(monaco.editor.getModels()\n                        .filter(function (model) { return model.getModeId() === _this._modeId; })\n                        .map(function (model) { return model.uri; }));\n                });\n            }\n            this._client = p;\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as ts from './lib/typescriptServices.js';\nvar Uri = monaco.Uri;\nvar Promise = monaco.Promise;\nvar Adapter = /** @class */ (function () {\n    function Adapter(_worker) {\n        this._worker = _worker;\n    }\n    Adapter.prototype._positionToOffset = function (uri, position) {\n        var model = monaco.editor.getModel(uri);\n        return model.getOffsetAt(position);\n    };\n    Adapter.prototype._offsetToPosition = function (uri, offset) {\n        var model = monaco.editor.getModel(uri);\n        return model.getPositionAt(offset);\n    };\n    Adapter.prototype._textSpanToRange = function (uri, span) {\n        var p1 = this._offsetToPosition(uri, span.start);\n        var p2 = this._offsetToPosition(uri, span.start + span.length);\n        var startLineNumber = p1.lineNumber, startColumn = p1.column;\n        var endLineNumber = p2.lineNumber, endColumn = p2.column;\n        return { startLineNumber: startLineNumber, startColumn: startColumn, endLineNumber: endLineNumber, endColumn: endColumn };\n    };\n    return Adapter;\n}());\nexport { Adapter };\n// --- diagnostics --- ---\nvar DiagnostcsAdapter = /** @class */ (function (_super) {\n    __extends(DiagnostcsAdapter, _super);\n    function DiagnostcsAdapter(_defaults, _selector, worker) {\n        var _this = _super.call(this, worker) || this;\n        _this._defaults = _defaults;\n        _this._selector = _selector;\n        _this._disposables = [];\n        _this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            if (model.getModeId() !== _selector) {\n                return;\n            }\n            var handle;\n            var changeSubscription = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri); }, 500);\n            });\n            _this._listener[model.uri.toString()] = {\n                dispose: function () {\n                    changeSubscription.dispose();\n                    clearTimeout(handle);\n                }\n            };\n            _this._doValidate(model.uri);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._selector, []);\n            var key = model.uri.toString();\n            if (_this._listener[key]) {\n                _this._listener[key].dispose();\n                delete _this._listener[key];\n            }\n        };\n        _this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        _this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\n        _this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        _this._disposables.push({\n            dispose: function () {\n                for (var _i = 0, _a = monaco.editor.getModels(); _i < _a.length; _i++) {\n                    var model = _a[_i];\n                    onModelRemoved(model);\n                }\n            }\n        });\n        _this._disposables.push(_this._defaults.onDidChange(function () {\n            // redo diagnostics when options change\n            for (var _i = 0, _a = monaco.editor.getModels(); _i < _a.length; _i++) {\n                var model = _a[_i];\n                onModelRemoved(model);\n                onModelAdd(model);\n            }\n        }));\n        monaco.editor.getModels().forEach(onModelAdd);\n        return _this;\n    }\n    DiagnostcsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnostcsAdapter.prototype._doValidate = function (resource) {\n        var _this = this;\n        this._worker(resource).then(function (worker) {\n            if (!monaco.editor.getModel(resource)) {\n                // model was disposed in the meantime\n                return null;\n            }\n            var promises = [];\n            var _a = _this._defaults.getDiagnosticsOptions(), noSyntaxValidation = _a.noSyntaxValidation, noSemanticValidation = _a.noSemanticValidation;\n            if (!noSyntaxValidation) {\n                promises.push(worker.getSyntacticDiagnostics(resource.toString()));\n            }\n            if (!noSemanticValidation) {\n                promises.push(worker.getSemanticDiagnostics(resource.toString()));\n            }\n            return Promise.join(promises);\n        }).then(function (diagnostics) {\n            if (!diagnostics || !monaco.editor.getModel(resource)) {\n                // model was disposed in the meantime\n                return null;\n            }\n            var markers = diagnostics\n                .reduce(function (p, c) { return c.concat(p); }, [])\n                .map(function (d) { return _this._convertDiagnostics(resource, d); });\n            monaco.editor.setModelMarkers(monaco.editor.getModel(resource), _this._selector, markers);\n        }).done(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    DiagnostcsAdapter.prototype._convertDiagnostics = function (resource, diag) {\n        var _a = this._offsetToPosition(resource, diag.start), startLineNumber = _a.lineNumber, startColumn = _a.column;\n        var _b = this._offsetToPosition(resource, diag.start + diag.length), endLineNumber = _b.lineNumber, endColumn = _b.column;\n        return {\n            severity: monaco.MarkerSeverity.Error,\n            startLineNumber: startLineNumber,\n            startColumn: startColumn,\n            endLineNumber: endLineNumber,\n            endColumn: endColumn,\n            message: ts.flattenDiagnosticMessageText(diag.messageText, '\\n')\n        };\n    };\n    return DiagnostcsAdapter;\n}(Adapter));\nexport { DiagnostcsAdapter };\nvar SuggestAdapter = /** @class */ (function (_super) {\n    __extends(SuggestAdapter, _super);\n    function SuggestAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SuggestAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SuggestAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        var offset = this._positionToOffset(resource, position);\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getCompletionsAtPosition(resource.toString(), offset);\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var suggestions = info.entries.map(function (entry) {\n                return {\n                    uri: resource,\n                    position: position,\n                    label: entry.name,\n                    sortText: entry.sortText,\n                    kind: SuggestAdapter.convertKind(entry.kind)\n                };\n            });\n            return suggestions;\n        }));\n    };\n    SuggestAdapter.prototype.resolveCompletionItem = function (item, token) {\n        var _this = this;\n        var myItem = item;\n        var resource = myItem.uri;\n        var position = myItem.position;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getCompletionEntryDetails(resource.toString(), _this._positionToOffset(resource, position), myItem.label);\n        }).then(function (details) {\n            if (!details) {\n                return myItem;\n            }\n            return {\n                uri: resource,\n                position: position,\n                label: details.name,\n                kind: SuggestAdapter.convertKind(details.kind),\n                detail: ts.displayPartsToString(details.displayParts),\n                documentation: ts.displayPartsToString(details.documentation)\n            };\n        }));\n    };\n    SuggestAdapter.convertKind = function (kind) {\n        switch (kind) {\n            case Kind.primitiveType:\n            case Kind.keyword:\n                return monaco.languages.CompletionItemKind.Keyword;\n            case Kind.variable:\n            case Kind.localVariable:\n                return monaco.languages.CompletionItemKind.Variable;\n            case Kind.memberVariable:\n            case Kind.memberGetAccessor:\n            case Kind.memberSetAccessor:\n                return monaco.languages.CompletionItemKind.Field;\n            case Kind.function:\n            case Kind.memberFunction:\n            case Kind.constructSignature:\n            case Kind.callSignature:\n            case Kind.indexSignature:\n                return monaco.languages.CompletionItemKind.Function;\n            case Kind.enum:\n                return monaco.languages.CompletionItemKind.Enum;\n            case Kind.module:\n                return monaco.languages.CompletionItemKind.Module;\n            case Kind.class:\n                return monaco.languages.CompletionItemKind.Class;\n            case Kind.interface:\n                return monaco.languages.CompletionItemKind.Interface;\n            case Kind.warning:\n                return monaco.languages.CompletionItemKind.File;\n        }\n        return monaco.languages.CompletionItemKind.Property;\n    };\n    return SuggestAdapter;\n}(Adapter));\nexport { SuggestAdapter };\nvar SignatureHelpAdapter = /** @class */ (function (_super) {\n    __extends(SignatureHelpAdapter, _super);\n    function SignatureHelpAdapter() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.signatureHelpTriggerCharacters = ['(', ','];\n        return _this;\n    }\n    SignatureHelpAdapter.prototype.provideSignatureHelp = function (model, position, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getSignatureHelpItems(resource.toString(), _this._positionToOffset(resource, position)); }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var ret = {\n                activeSignature: info.selectedItemIndex,\n                activeParameter: info.argumentIndex,\n                signatures: []\n            };\n            info.items.forEach(function (item) {\n                var signature = {\n                    label: '',\n                    documentation: null,\n                    parameters: []\n                };\n                signature.label += ts.displayPartsToString(item.prefixDisplayParts);\n                item.parameters.forEach(function (p, i, a) {\n                    var label = ts.displayPartsToString(p.displayParts);\n                    var parameter = {\n                        label: label,\n                        documentation: ts.displayPartsToString(p.documentation)\n                    };\n                    signature.label += label;\n                    signature.parameters.push(parameter);\n                    if (i < a.length - 1) {\n                        signature.label += ts.displayPartsToString(item.separatorDisplayParts);\n                    }\n                });\n                signature.label += ts.displayPartsToString(item.suffixDisplayParts);\n                ret.signatures.push(signature);\n            });\n            return ret;\n        }));\n    };\n    return SignatureHelpAdapter;\n}(Adapter));\nexport { SignatureHelpAdapter };\n// --- hover ------\nvar QuickInfoAdapter = /** @class */ (function (_super) {\n    __extends(QuickInfoAdapter, _super);\n    function QuickInfoAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    QuickInfoAdapter.prototype.provideHover = function (model, position, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getQuickInfoAtPosition(resource.toString(), _this._positionToOffset(resource, position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var documentation = ts.displayPartsToString(info.documentation);\n            var tags = info.tags ? info.tags.map(function (tag) {\n                var label = \"*@\" + tag.name + \"*\";\n                if (!tag.text) {\n                    return label;\n                }\n                return label + (tag.text.match(/\\r\\n|\\n/g) ? ' \\n' + tag.text : \" - \" + tag.text);\n            })\n                .join('  \\n\\n') : '';\n            var contents = ts.displayPartsToString(info.displayParts);\n            return {\n                range: _this._textSpanToRange(resource, info.textSpan),\n                contents: [{\n                        value: contents\n                    }, {\n                        value: documentation + (tags ? '\\n\\n' + tags : '')\n                    }]\n            };\n        }));\n    };\n    return QuickInfoAdapter;\n}(Adapter));\nexport { QuickInfoAdapter };\n// --- occurrences ------\nvar OccurrencesAdapter = /** @class */ (function (_super) {\n    __extends(OccurrencesAdapter, _super);\n    function OccurrencesAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OccurrencesAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getOccurrencesAtPosition(resource.toString(), _this._positionToOffset(resource, position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            return entries.map(function (entry) {\n                return {\n                    range: _this._textSpanToRange(resource, entry.textSpan),\n                    kind: entry.isWriteAccess ? monaco.languages.DocumentHighlightKind.Write : monaco.languages.DocumentHighlightKind.Text\n                };\n            });\n        }));\n    };\n    return OccurrencesAdapter;\n}(Adapter));\nexport { OccurrencesAdapter };\n// --- definition ------\nvar DefinitionAdapter = /** @class */ (function (_super) {\n    __extends(DefinitionAdapter, _super);\n    function DefinitionAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getDefinitionAtPosition(resource.toString(), _this._positionToOffset(resource, position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            var result = [];\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n                var entry = entries_1[_i];\n                var uri = Uri.parse(entry.fileName);\n                if (monaco.editor.getModel(uri)) {\n                    result.push({\n                        uri: uri,\n                        range: _this._textSpanToRange(uri, entry.textSpan)\n                    });\n                }\n            }\n            return result;\n        }));\n    };\n    return DefinitionAdapter;\n}(Adapter));\nexport { DefinitionAdapter };\n// --- references ------\nvar ReferenceAdapter = /** @class */ (function (_super) {\n    __extends(ReferenceAdapter, _super);\n    function ReferenceAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getReferencesAtPosition(resource.toString(), _this._positionToOffset(resource, position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            var result = [];\n            for (var _i = 0, entries_2 = entries; _i < entries_2.length; _i++) {\n                var entry = entries_2[_i];\n                var uri = Uri.parse(entry.fileName);\n                if (monaco.editor.getModel(uri)) {\n                    result.push({\n                        uri: uri,\n                        range: _this._textSpanToRange(uri, entry.textSpan)\n                    });\n                }\n            }\n            return result;\n        }));\n    };\n    return ReferenceAdapter;\n}(Adapter));\nexport { ReferenceAdapter };\n// --- outline ------\nvar OutlineAdapter = /** @class */ (function (_super) {\n    __extends(OutlineAdapter, _super);\n    function OutlineAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OutlineAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getNavigationBarItems(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            var convert = function (bucket, item, containerLabel) {\n                var result = {\n                    name: item.text,\n                    kind: (outlineTypeTable[item.kind] || monaco.languages.SymbolKind.Variable),\n                    location: {\n                        uri: resource,\n                        range: _this._textSpanToRange(resource, item.spans[0])\n                    },\n                    containerName: containerLabel\n                };\n                if (item.childItems && item.childItems.length > 0) {\n                    for (var _i = 0, _a = item.childItems; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        convert(bucket, child, result.name);\n                    }\n                }\n                bucket.push(result);\n            };\n            var result = [];\n            items.forEach(function (item) { return convert(result, item); });\n            return result;\n        }));\n    };\n    return OutlineAdapter;\n}(Adapter));\nexport { OutlineAdapter };\nvar Kind = /** @class */ (function () {\n    function Kind() {\n    }\n    Kind.unknown = '';\n    Kind.keyword = 'keyword';\n    Kind.script = 'script';\n    Kind.module = 'module';\n    Kind.class = 'class';\n    Kind.interface = 'interface';\n    Kind.type = 'type';\n    Kind.enum = 'enum';\n    Kind.variable = 'var';\n    Kind.localVariable = 'local var';\n    Kind.function = 'function';\n    Kind.localFunction = 'local function';\n    Kind.memberFunction = 'method';\n    Kind.memberGetAccessor = 'getter';\n    Kind.memberSetAccessor = 'setter';\n    Kind.memberVariable = 'property';\n    Kind.constructorImplementation = 'constructor';\n    Kind.callSignature = 'call';\n    Kind.indexSignature = 'index';\n    Kind.constructSignature = 'construct';\n    Kind.parameter = 'parameter';\n    Kind.typeParameter = 'type parameter';\n    Kind.primitiveType = 'primitive type';\n    Kind.label = 'label';\n    Kind.alias = 'alias';\n    Kind.const = 'const';\n    Kind.let = 'let';\n    Kind.warning = 'warning';\n    return Kind;\n}());\nexport { Kind };\nvar outlineTypeTable = Object.create(null);\noutlineTypeTable[Kind.module] = monaco.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco.languages.SymbolKind.Function;\n// --- formatting ----\nvar FormatHelper = /** @class */ (function (_super) {\n    __extends(FormatHelper, _super);\n    function FormatHelper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FormatHelper._convertOptions = function (options) {\n        return {\n            ConvertTabsToSpaces: options.insertSpaces,\n            TabSize: options.tabSize,\n            IndentSize: options.tabSize,\n            IndentStyle: ts.IndentStyle.Smart,\n            NewLineCharacter: '\\n',\n            InsertSpaceAfterCommaDelimiter: true,\n            InsertSpaceAfterSemicolonInForStatements: true,\n            InsertSpaceBeforeAndAfterBinaryOperators: true,\n            InsertSpaceAfterKeywordsInControlFlowStatements: true,\n            InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n            InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n            InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n            InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n            PlaceOpenBraceOnNewLineForControlBlocks: false,\n            PlaceOpenBraceOnNewLineForFunctions: false\n        };\n    };\n    FormatHelper.prototype._convertTextChanges = function (uri, change) {\n        return {\n            text: change.newText,\n            range: this._textSpanToRange(uri, change.span)\n        };\n    };\n    return FormatHelper;\n}(Adapter));\nexport { FormatHelper };\nvar FormatAdapter = /** @class */ (function (_super) {\n    __extends(FormatAdapter, _super);\n    function FormatAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FormatAdapter.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getFormattingEditsForRange(resource.toString(), _this._positionToOffset(resource, { lineNumber: range.startLineNumber, column: range.startColumn }), _this._positionToOffset(resource, { lineNumber: range.endLineNumber, column: range.endColumn }), FormatHelper._convertOptions(options));\n        }).then(function (edits) {\n            if (edits) {\n                return edits.map(function (edit) { return _this._convertTextChanges(resource, edit); });\n            }\n        }));\n    };\n    return FormatAdapter;\n}(FormatHelper));\nexport { FormatAdapter };\nvar FormatOnTypeAdapter = /** @class */ (function (_super) {\n    __extends(FormatOnTypeAdapter, _super);\n    function FormatOnTypeAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(FormatOnTypeAdapter.prototype, \"autoFormatTriggerCharacters\", {\n        get: function () {\n            return [';', '}', '\\n'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FormatOnTypeAdapter.prototype.provideOnTypeFormattingEdits = function (model, position, ch, options, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getFormattingEditsAfterKeystroke(resource.toString(), _this._positionToOffset(resource, position), ch, FormatHelper._convertOptions(options));\n        }).then(function (edits) {\n            if (edits) {\n                return edits.map(function (edit) { return _this._convertTextChanges(resource, edit); });\n            }\n        }));\n    };\n    return FormatOnTypeAdapter;\n}(FormatHelper));\nexport { FormatOnTypeAdapter };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    token.onCancellationRequested(function () { return promise.cancel(); });\n    return promise;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { Language, createTokenizationSupport } from './tokenization.js';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nvar javaScriptWorker;\nvar typeScriptWorker;\nexport function setupTypeScript(defaults) {\n    typeScriptWorker = setupMode(defaults, 'typescript', Language.TypeScript);\n}\nexport function setupJavaScript(defaults) {\n    javaScriptWorker = setupMode(defaults, 'javascript', Language.EcmaScript5);\n}\nexport function getJavaScriptWorker() {\n    return new monaco.Promise(function (resolve, reject) {\n        if (!javaScriptWorker) {\n            return reject(\"JavaScript not registered!\");\n        }\n        resolve(javaScriptWorker);\n    });\n}\nexport function getTypeScriptWorker() {\n    return new monaco.Promise(function (resolve, reject) {\n        if (!typeScriptWorker) {\n            return reject(\"TypeScript not registered!\");\n        }\n        resolve(typeScriptWorker);\n    });\n}\nfunction setupMode(defaults, modeId, language) {\n    var client = new WorkerManager(modeId, defaults);\n    var worker = function (first) {\n        var more = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            more[_i - 1] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, [first].concat(more));\n    };\n    monaco.languages.registerCompletionItemProvider(modeId, new languageFeatures.SuggestAdapter(worker));\n    monaco.languages.registerSignatureHelpProvider(modeId, new languageFeatures.SignatureHelpAdapter(worker));\n    monaco.languages.registerHoverProvider(modeId, new languageFeatures.QuickInfoAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(modeId, new languageFeatures.OccurrencesAdapter(worker));\n    monaco.languages.registerDefinitionProvider(modeId, new languageFeatures.DefinitionAdapter(worker));\n    monaco.languages.registerReferenceProvider(modeId, new languageFeatures.ReferenceAdapter(worker));\n    monaco.languages.registerDocumentSymbolProvider(modeId, new languageFeatures.OutlineAdapter(worker));\n    monaco.languages.registerDocumentRangeFormattingEditProvider(modeId, new languageFeatures.FormatAdapter(worker));\n    monaco.languages.registerOnTypeFormattingEditProvider(modeId, new languageFeatures.FormatOnTypeAdapter(worker));\n    new languageFeatures.DiagnostcsAdapter(defaults, modeId, worker);\n    monaco.languages.setLanguageConfiguration(modeId, richEditConfiguration);\n    monaco.languages.setTokensProvider(modeId, createTokenizationSupport(language));\n    return worker;\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    onEnterRules: [\n        {\n            // e.g. /** | */\n            beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n            afterText: /^\\s*\\*\\/$/,\n            action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\n        },\n        {\n            // e.g. /** ...|\n            beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n            action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\n        },\n        {\n            // e.g.  * ...|\n            beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\n            action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\n        },\n        {\n            // e.g.  */|\n            beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\n            action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\n        }\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '`', close: '`', notIn: ['string', 'comment'] },\n        { open: \"/**\", close: \" */\", notIn: [\"string\"] }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*//\\\\s*#?region\\\\b\"),\n            end: new RegExp(\"^\\\\s*//\\\\s*#?endregion\\\\b\")\n        }\n    }\n};\n"],"sourceRoot":""}